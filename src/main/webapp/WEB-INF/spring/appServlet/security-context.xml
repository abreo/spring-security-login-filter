<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint" >

        <custom-filter after="FORM_LOGIN_FILTER" ref="customLoginFilter" /> 

        <!-- 認可の設定 --> 
        <intercept-url pattern="/top*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/user*" access="hasRole('ROLE_USER')" />
        
        <!-- 権限なし時の遷移先 -->
        <access-denied-handler error-page="/403" />
        
        <!-- 認証のログイン処理 -->
        <!-- 
        <form-login 
            login-page="/" 
            default-target-url="/top" 
            authentication-failure-url="/error" 
            login-processing-url="/j_spring_security_check"/>
         -->
        <!-- 認証のログアウト処理 -->
        <logout
            logout-url="/logout"
            logout-success-url="/"
            invalidate-session="true"/>
        <!-- anonymousユーザのROLE -->
        <anonymous granted-authority="ROLE_ANONYMOUS" />
    </http>

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:constructor-arg value="/" />
    </beans:bean>

    <beans:bean id="customLoginFilter"
        class="jp.co.security.CustomLoginFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <!-- 認証失敗時に呼ばれるハンドラクラス -->
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
        <!-- 認証成功時に呼ばれるハンドラクラス -->
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
        <!-- 認証処理を行うパス -->
        <!-- <beans:property name="filterProcessesUrl" value="/authentication" /> -->
        <beans:property name="filterProcessesUrl" value="/authentication" /> 
    </beans:bean>
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customAuthenticationProvider" />
    </authentication-manager>
     
    <beans:bean id="customAuthenticationProvider"
        class="jp.co.security.CustomAuthenticationProvider" />
    
    <beans:bean id="authenticationFailureHandler"
        class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler" >
        <beans:property name="defaultFailureUrl" value="/error"/>
        <beans:property name="useForward" value="true"/>
        <beans:property name="exceptionMappings">
            <beans:props>
              <beans:prop key=
                "org.springframework.security.authentication.AuthenticationServiceException">
                  /error
              </beans:prop>
            </beans:props>
        </beans:property>

    </beans:bean>
        
    <beans:bean id="authenticationSuccessHandler"
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler" >
        <beans:property name="targetUrlParameter" value="redirectTo"/> 
    </beans:bean>
    
    <!-- ユーザとROLEを定義 --> 
    <!-- 
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_ADMIN" />
                <user name="user" password="user" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
     -->


</beans:beans>